{"ast":null,"code":"import * as React from 'react';\nimport { useGridLogger } from './useGridLogger';\nexport function useGridScrollFn(apiRef, renderingZoneElementRef, columnHeadersElementRef) {\n  var logger = useGridLogger(apiRef, 'useGridScrollFn');\n  var previousValue = React.useRef();\n  var scrollTo = React.useCallback(function (v) {\n    var _previousValue$curren;\n\n    if (v.left === ((_previousValue$curren = previousValue.current) == null ? void 0 : _previousValue$curren.left) && v.top === previousValue.current.top) {\n      return;\n    }\n\n    if (renderingZoneElementRef && renderingZoneElementRef.current) {\n      logger.debug(\"Moving \".concat(renderingZoneElementRef.current.className, \" to: \").concat(v.left, \"-\").concat(v.top)); // Force the creation of a layer, avoid paint when changing the transform value.\n\n      renderingZoneElementRef.current.style.transform = \"translate3d(\".concat(-v.left, \"px, \").concat(-v.top, \"px, 0px)\");\n      columnHeadersElementRef.current.style.transform = \"translate3d(\".concat(-v.left, \"px, 0px, 0px)\");\n      previousValue.current = v;\n    }\n  }, [renderingZoneElementRef, logger, columnHeadersElementRef]);\n  return [scrollTo];\n}","map":{"version":3,"names":["React","useGridLogger","useGridScrollFn","apiRef","renderingZoneElementRef","columnHeadersElementRef","logger","previousValue","useRef","scrollTo","useCallback","v","_previousValue$curren","left","current","top","debug","className","style","transform"],"sources":["C:/Users/luluf/OneDrive/Documents/Proximety/api-documentation-ui/node_modules/@mui/x-data-grid/hooks/utils/useGridScrollFn.js"],"sourcesContent":["import * as React from 'react';\nimport { useGridLogger } from './useGridLogger';\nexport function useGridScrollFn(apiRef, renderingZoneElementRef, columnHeadersElementRef) {\n  const logger = useGridLogger(apiRef, 'useGridScrollFn');\n  const previousValue = React.useRef();\n  const scrollTo = React.useCallback(v => {\n    var _previousValue$curren;\n\n    if (v.left === ((_previousValue$curren = previousValue.current) == null ? void 0 : _previousValue$curren.left) && v.top === previousValue.current.top) {\n      return;\n    }\n\n    if (renderingZoneElementRef && renderingZoneElementRef.current) {\n      logger.debug(`Moving ${renderingZoneElementRef.current.className} to: ${v.left}-${v.top}`); // Force the creation of a layer, avoid paint when changing the transform value.\n\n      renderingZoneElementRef.current.style.transform = `translate3d(${-v.left}px, ${-v.top}px, 0px)`;\n      columnHeadersElementRef.current.style.transform = `translate3d(${-v.left}px, 0px, 0px)`;\n      previousValue.current = v;\n    }\n  }, [renderingZoneElementRef, logger, columnHeadersElementRef]);\n  return [scrollTo];\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAO,SAASC,eAAT,CAAyBC,MAAzB,EAAiCC,uBAAjC,EAA0DC,uBAA1D,EAAmF;EACxF,IAAMC,MAAM,GAAGL,aAAa,CAACE,MAAD,EAAS,iBAAT,CAA5B;EACA,IAAMI,aAAa,GAAGP,KAAK,CAACQ,MAAN,EAAtB;EACA,IAAMC,QAAQ,GAAGT,KAAK,CAACU,WAAN,CAAkB,UAAAC,CAAC,EAAI;IACtC,IAAIC,qBAAJ;;IAEA,IAAID,CAAC,CAACE,IAAF,MAAY,CAACD,qBAAqB,GAAGL,aAAa,CAACO,OAAvC,KAAmD,IAAnD,GAA0D,KAAK,CAA/D,GAAmEF,qBAAqB,CAACC,IAArG,KAA8GF,CAAC,CAACI,GAAF,KAAUR,aAAa,CAACO,OAAd,CAAsBC,GAAlJ,EAAuJ;MACrJ;IACD;;IAED,IAAIX,uBAAuB,IAAIA,uBAAuB,CAACU,OAAvD,EAAgE;MAC9DR,MAAM,CAACU,KAAP,kBAAuBZ,uBAAuB,CAACU,OAAxB,CAAgCG,SAAvD,kBAAwEN,CAAC,CAACE,IAA1E,cAAkFF,CAAC,CAACI,GAApF,GAD8D,CAC8B;;MAE5FX,uBAAuB,CAACU,OAAxB,CAAgCI,KAAhC,CAAsCC,SAAtC,yBAAiE,CAACR,CAAC,CAACE,IAApE,iBAA+E,CAACF,CAAC,CAACI,GAAlF;MACAV,uBAAuB,CAACS,OAAxB,CAAgCI,KAAhC,CAAsCC,SAAtC,yBAAiE,CAACR,CAAC,CAACE,IAApE;MACAN,aAAa,CAACO,OAAd,GAAwBH,CAAxB;IACD;EACF,CAdgB,EAcd,CAACP,uBAAD,EAA0BE,MAA1B,EAAkCD,uBAAlC,CAdc,CAAjB;EAeA,OAAO,CAACI,QAAD,CAAP;AACD"},"metadata":{},"sourceType":"module"}