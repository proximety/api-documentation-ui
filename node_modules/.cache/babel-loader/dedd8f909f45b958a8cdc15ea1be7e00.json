{"ast":null,"code":"import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nexport var getGridStringQuickFilterFn = function getGridStringQuickFilterFn(value) {\n  if (!value) {\n    return null;\n  }\n\n  var filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return function (_ref) {\n    var columnValue = _ref.value;\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport var getGridStringOperators = function getGridStringOperators() {\n  var disableTrim = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return [{\n    value: 'contains',\n    getApplyFilterFn: function getApplyFilterFn(filterItem) {\n      if (!filterItem.value) {\n        return null;\n      }\n\n      var filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n      var filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n      return function (_ref2) {\n        var value = _ref2.value;\n        return value != null ? filterRegex.test(value.toString()) : false;\n      };\n    },\n    InputComponent: GridFilterInputValue\n  }, {\n    value: 'equals',\n    getApplyFilterFn: function getApplyFilterFn(filterItem) {\n      if (!filterItem.value) {\n        return null;\n      }\n\n      var filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n      var collator = new Intl.Collator(undefined, {\n        sensitivity: 'base',\n        usage: 'search'\n      });\n      return function (_ref3) {\n        var value = _ref3.value;\n        return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n      };\n    },\n    InputComponent: GridFilterInputValue\n  }, {\n    value: 'startsWith',\n    getApplyFilterFn: function getApplyFilterFn(filterItem) {\n      if (!filterItem.value) {\n        return null;\n      }\n\n      var filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n      var filterRegex = new RegExp(\"^\".concat(escapeRegExp(filterItemValue), \".*$\"), 'i');\n      return function (_ref4) {\n        var value = _ref4.value;\n        return value != null ? filterRegex.test(value.toString()) : false;\n      };\n    },\n    InputComponent: GridFilterInputValue\n  }, {\n    value: 'endsWith',\n    getApplyFilterFn: function getApplyFilterFn(filterItem) {\n      if (!filterItem.value) {\n        return null;\n      }\n\n      var filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n      var filterRegex = new RegExp(\".*\".concat(escapeRegExp(filterItemValue), \"$\"), 'i');\n      return function (_ref5) {\n        var value = _ref5.value;\n        return value != null ? filterRegex.test(value.toString()) : false;\n      };\n    },\n    InputComponent: GridFilterInputValue\n  }, {\n    value: 'isEmpty',\n    getApplyFilterFn: function getApplyFilterFn() {\n      return function (_ref6) {\n        var value = _ref6.value;\n        return value === '' || value == null;\n      };\n    },\n    requiresFilterValue: false\n  }, {\n    value: 'isNotEmpty',\n    getApplyFilterFn: function getApplyFilterFn() {\n      return function (_ref7) {\n        var value = _ref7.value;\n        return value !== '' && value != null;\n      };\n    },\n    requiresFilterValue: false\n  }, {\n    value: 'isAnyOf',\n    getApplyFilterFn: function getApplyFilterFn(filterItem) {\n      if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n        return null;\n      }\n\n      var filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(function (val) {\n        return val.trim();\n      });\n      var collator = new Intl.Collator(undefined, {\n        sensitivity: 'base',\n        usage: 'search'\n      });\n      return function (_ref8) {\n        var value = _ref8.value;\n        return value != null ? filterItemValue.some(function (filterValue) {\n          return collator.compare(filterValue, value.toString() || '') === 0;\n        }) : false;\n      };\n    },\n    InputComponent: GridFilterInputMultipleValue\n  }];\n};","map":{"version":3,"names":["GridFilterInputValue","escapeRegExp","GridFilterInputMultipleValue","getGridStringQuickFilterFn","value","filterRegex","RegExp","columnValue","test","toString","getGridStringOperators","disableTrim","getApplyFilterFn","filterItem","filterItemValue","trim","InputComponent","collator","Intl","Collator","undefined","sensitivity","usage","compare","requiresFilterValue","Array","isArray","length","map","val","some","filterValue"],"sources":["C:/Users/luluf/OneDrive/Documents/Proximety/api-documentation-ui/node_modules/@mui/x-data-grid/colDef/gridStringOperators.js"],"sourcesContent":["import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return ({\n    value: columnValue\n  }) => {\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return ({\n      value\n    }) => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value === '' || value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value !== '' && value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return ({\n      value\n    }) => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];"],"mappings":"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"},"metadata":{},"sourceType":"module"}