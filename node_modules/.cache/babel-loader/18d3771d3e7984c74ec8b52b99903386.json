{"ast":null,"code":"import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\n\nvar parseObjectValue = function parseObjectValue(value) {\n  if (value == null || typeof value !== 'object') {\n    return value;\n  }\n\n  return value.value;\n};\n\nexport var getGridSingleSelectQuickFilterFn = function getGridSingleSelectQuickFilterFn(value, column, apiRef) {\n  if (!value) {\n    return null;\n  }\n\n  var valueOptions = column.valueOptions,\n      valueFormatter = column.valueFormatter,\n      field = column.field;\n  var potentialValues = [parseObjectValue(value).toString()];\n  var iterableColumnValues = typeof valueOptions === 'function' ? valueOptions({\n    field: field\n  }) : valueOptions || [];\n\n  if (iterableColumnValues) {\n    iterableColumnValues.forEach(function (option) {\n      // for each valueOption, check if the formatted value\n      var optionValue;\n      var optionLabel;\n\n      if (typeof option === 'object') {\n        optionValue = option.value;\n        optionLabel = option.label;\n      } else {\n        optionValue = option;\n\n        if (valueFormatter) {\n          optionLabel = valueFormatter({\n            value: option,\n            field: field,\n            api: apiRef.current\n          });\n        } else {\n          optionLabel = option;\n        }\n      }\n\n      if (optionLabel.slice(0, value.length).toLowerCase() === value.toLowerCase()) {\n        if (!potentialValues.includes(optionValue)) {\n          potentialValues.push(optionValue.toString());\n        }\n      }\n    });\n  }\n\n  return function (_ref) {\n    var columnValue = _ref.value;\n    return columnValue != null ? potentialValues.includes(parseObjectValue(columnValue).toString()) : false;\n  };\n};\nexport var getGridSingleSelectOperators = function getGridSingleSelectOperators() {\n  return [{\n    value: 'is',\n    getApplyFilterFn: function getApplyFilterFn(filterItem) {\n      if (filterItem.value == null || filterItem.value === '') {\n        return null;\n      }\n\n      return function (_ref2) {\n        var value = _ref2.value;\n        return parseObjectValue(value) === parseObjectValue(filterItem.value);\n      };\n    },\n    InputComponent: GridFilterInputSingleSelect\n  }, {\n    value: 'not',\n    getApplyFilterFn: function getApplyFilterFn(filterItem) {\n      if (filterItem.value == null || filterItem.value === '') {\n        return null;\n      }\n\n      return function (_ref3) {\n        var value = _ref3.value;\n        return parseObjectValue(value) !== parseObjectValue(filterItem.value);\n      };\n    },\n    InputComponent: GridFilterInputSingleSelect\n  }, {\n    value: 'isAnyOf',\n    getApplyFilterFn: function getApplyFilterFn(filterItem) {\n      if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n        return null;\n      }\n\n      var filterItemValues = filterItem.value.map(parseObjectValue);\n      return function (_ref4) {\n        var value = _ref4.value;\n        return filterItemValues.includes(parseObjectValue(value));\n      };\n    },\n    InputComponent: GridFilterInputMultipleSingleSelect\n  }];\n};","map":{"version":3,"names":["GridFilterInputSingleSelect","GridFilterInputMultipleSingleSelect","parseObjectValue","value","getGridSingleSelectQuickFilterFn","column","apiRef","valueOptions","valueFormatter","field","potentialValues","toString","iterableColumnValues","forEach","option","optionValue","optionLabel","label","api","current","slice","length","toLowerCase","includes","push","columnValue","getGridSingleSelectOperators","getApplyFilterFn","filterItem","InputComponent","Array","isArray","filterItemValues","map"],"sources":["C:/Users/luluf/OneDrive/Documents/Proximety/api-documentation-ui/node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js"],"sourcesContent":["import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\n\nconst parseObjectValue = value => {\n  if (value == null || typeof value !== 'object') {\n    return value;\n  }\n\n  return value.value;\n};\n\nexport const getGridSingleSelectQuickFilterFn = (value, column, apiRef) => {\n  if (!value) {\n    return null;\n  }\n\n  const {\n    valueOptions,\n    valueFormatter,\n    field\n  } = column;\n  const potentialValues = [parseObjectValue(value).toString()];\n  const iterableColumnValues = typeof valueOptions === 'function' ? valueOptions({\n    field\n  }) : valueOptions || [];\n\n  if (iterableColumnValues) {\n    iterableColumnValues.forEach(option => {\n      // for each valueOption, check if the formatted value\n      let optionValue;\n      let optionLabel;\n\n      if (typeof option === 'object') {\n        optionValue = option.value;\n        optionLabel = option.label;\n      } else {\n        optionValue = option;\n\n        if (valueFormatter) {\n          optionLabel = valueFormatter({\n            value: option,\n            field,\n            api: apiRef.current\n          });\n        } else {\n          optionLabel = option;\n        }\n      }\n\n      if (optionLabel.slice(0, value.length).toLowerCase() === value.toLowerCase()) {\n        if (!potentialValues.includes(optionValue)) {\n          potentialValues.push(optionValue.toString());\n        }\n      }\n    });\n  }\n\n  return ({\n    value: columnValue\n  }) => {\n    return columnValue != null ? potentialValues.includes(parseObjectValue(columnValue).toString()) : false;\n  };\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n\n    return ({\n      value\n    }) => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n\n    return ({\n      value\n    }) => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return ({\n      value\n    }) => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];"],"mappings":"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"},"metadata":{},"sourceType":"module"}