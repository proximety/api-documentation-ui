{"ast":null,"code":"import _toConsumableArray from \"C:/Users/luluf/OneDrive/Documents/Proximety/api-documentation-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  return React.useMemo(function () {\n    var slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\n\nexport var useGridSelectionPreProcessors = function useGridSelectionPreProcessors(apiRef, props) {\n  var ownerState = {\n    classes: props.classes\n  };\n  var classes = useUtilityClasses(ownerState);\n  var updateSelectionColumn = React.useCallback(function (columnsState) {\n    var selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n\n    var shouldHaveSelectionColumn = props.checkboxSelection;\n    var haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.all = [GRID_CHECKBOX_SELECTION_FIELD].concat(_toConsumableArray(columnsState.all));\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.all = columnsState.all.filter(function (field) {\n        return field !== GRID_CHECKBOX_SELECTION_FIELD;\n      });\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","map":{"version":3,"names":["_extends","React","unstable_composeClasses","composeClasses","useGridRegisterPipeProcessor","getDataGridUtilityClass","GRID_CHECKBOX_SELECTION_COL_DEF","GRID_CHECKBOX_SELECTION_FIELD","useUtilityClasses","ownerState","classes","useMemo","slots","cellCheckbox","columnHeaderCheckbox","useGridSelectionPreProcessors","apiRef","props","updateSelectionColumn","useCallback","columnsState","selectionColumn","cellClassName","headerClassName","headerName","current","getLocaleText","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","lookup","all","filter","field"],"sources":["C:/Users/luluf/OneDrive/Documents/Proximety/api-documentation-ui/node_modules/@mui/x-data-grid/hooks/features/selection/useGridSelectionPreProcessors.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\n\nexport const useGridSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.all = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.all];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.all = columnsState.all.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,eAA1D;AACA,SAASC,4BAAT,QAA6C,2BAA7C;AACA,SAASC,uBAAT,QAAwC,oBAAxC;AACA,SAASC,+BAAT,EAA0CC,6BAA1C,QAA+E,iBAA/E;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,UAAU,EAAI;EACtC,IACEC,OADF,GAEID,UAFJ,CACEC,OADF;EAGA,OAAOT,KAAK,CAACU,OAAN,CAAc,YAAM;IACzB,IAAMC,KAAK,GAAG;MACZC,YAAY,EAAE,CAAC,cAAD,CADF;MAEZC,oBAAoB,EAAE,CAAC,sBAAD;IAFV,CAAd;IAIA,OAAOX,cAAc,CAACS,KAAD,EAAQP,uBAAR,EAAiCK,OAAjC,CAArB;EACD,CANM,EAMJ,CAACA,OAAD,CANI,CAAP;AAOD,CAXD;;AAaA,OAAO,IAAMK,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACC,MAAD,EAASC,KAAT,EAAmB;EAC9D,IAAMR,UAAU,GAAG;IACjBC,OAAO,EAAEO,KAAK,CAACP;EADE,CAAnB;EAGA,IAAMA,OAAO,GAAGF,iBAAiB,CAACC,UAAD,CAAjC;EACA,IAAMS,qBAAqB,GAAGjB,KAAK,CAACkB,WAAN,CAAkB,UAAAC,YAAY,EAAI;IAC9D,IAAMC,eAAe,GAAGrB,QAAQ,CAAC,EAAD,EAAKM,+BAAL,EAAsC;MACpEgB,aAAa,EAAEZ,OAAO,CAACG,YAD6C;MAEpEU,eAAe,EAAEb,OAAO,CAACI,oBAF2C;MAGpEU,UAAU,EAAER,MAAM,CAACS,OAAP,CAAeC,aAAf,CAA6B,6BAA7B;IAHwD,CAAtC,CAAhC;;IAMA,IAAMC,yBAAyB,GAAGV,KAAK,CAACW,iBAAxC;IACA,IAAMC,mBAAmB,GAAGT,YAAY,CAACU,MAAb,CAAoBvB,6BAApB,KAAsD,IAAlF;;IAEA,IAAIoB,yBAAyB,IAAI,CAACE,mBAAlC,EAAuD;MACrDT,YAAY,CAACU,MAAb,CAAoBvB,6BAApB,IAAqDc,eAArD;MACAD,YAAY,CAACW,GAAb,IAAoBxB,6BAApB,4BAAsDa,YAAY,CAACW,GAAnE;IACD,CAHD,MAGO,IAAI,CAACJ,yBAAD,IAA8BE,mBAAlC,EAAuD;MAC5D,OAAOT,YAAY,CAACU,MAAb,CAAoBvB,6BAApB,CAAP;MACAa,YAAY,CAACW,GAAb,GAAmBX,YAAY,CAACW,GAAb,CAAiBC,MAAjB,CAAwB,UAAAC,KAAK;QAAA,OAAIA,KAAK,KAAK1B,6BAAd;MAAA,CAA7B,CAAnB;IACD,CAHM,MAGA,IAAIoB,yBAAyB,IAAIE,mBAAjC,EAAsD;MAC3DT,YAAY,CAACU,MAAb,CAAoBvB,6BAApB,IAAqDP,QAAQ,CAAC,EAAD,EAAKqB,eAAL,EAAsBD,YAAY,CAACU,MAAb,CAAoBvB,6BAApB,CAAtB,CAA7D;IACD;;IAED,OAAOa,YAAP;EACD,CArB6B,EAqB3B,CAACJ,MAAD,EAASN,OAAT,EAAkBO,KAAK,CAACW,iBAAxB,CArB2B,CAA9B;EAsBAxB,4BAA4B,CAACY,MAAD,EAAS,gBAAT,EAA2BE,qBAA3B,CAA5B;AACD,CA5BM"},"metadata":{},"sourceType":"module"}