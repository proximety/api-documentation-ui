{"ast":null,"code":"import _toConsumableArray from \"C:/Users/luluf/OneDrive/Documents/Proximety/api-documentation-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"rowsBeforePartialUpdates\"];\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\n\nexport function checkGridRowIdIsValid(id, row) {\n  var detailErrorMessage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'A row was provided without id in the rows prop:';\n\n  if (id == null) {\n    throw new Error(['MUI: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport var getRowIdFromRowModel = function getRowIdFromRowModel(rowModel, getRowId, detailErrorMessage) {\n  var id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport var createRowsInternalCache = function createRowsInternalCache(_ref) {\n  var rows = _ref.rows,\n      getRowId = _ref.getRowId,\n      loading = _ref.loading;\n  var cache = {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    idRowsLookup: {},\n    idToIdLookup: {},\n    ids: []\n  };\n\n  for (var i = 0; i < rows.length; i += 1) {\n    var row = rows[i];\n    var id = getRowIdFromRowModel(row, getRowId);\n    cache.idRowsLookup[id] = row;\n    cache.idToIdLookup[id] = id;\n    cache.ids.push(id);\n  }\n\n  return cache;\n};\nexport var getRowsStateFromCache = function getRowsStateFromCache(_ref2) {\n  var apiRef = _ref2.apiRef,\n      previousTree = _ref2.previousTree,\n      rowCountProp = _ref2.rowCountProp,\n      loadingProp = _ref2.loadingProp;\n\n  var _apiRef$current$unsta = apiRef.current.unstable_caches.rows,\n      cacheForGrouping = _objectWithoutPropertiesLoose(_apiRef$current$unsta, _excluded);\n\n  var rowCount = rowCountProp != null ? rowCountProp : 0;\n  var groupingResponse = apiRef.current.unstable_applyStrategyProcessor('rowTreeCreation', _extends({}, cacheForGrouping, {\n    previousTree: previousTree\n  }));\n  var processedGroupingResponse = apiRef.current.unstable_applyPipeProcessors('hydrateRows', groupingResponse);\n  var dataTopLevelRowCount = processedGroupingResponse.treeDepth === 1 ? processedGroupingResponse.ids.length : Object.values(processedGroupingResponse.tree).filter(function (node) {\n    return node.parent == null && !node.isPinned;\n  }).length;\n  return _extends({}, processedGroupingResponse, {\n    groupingResponseBeforeRowHydration: groupingResponse,\n    loading: loadingProp,\n    totalRowCount: Math.max(rowCount, processedGroupingResponse.ids.length),\n    totalTopLevelRowCount: Math.max(rowCount, dataTopLevelRowCount)\n  });\n};\nexport var getTreeNodeDescendants = function getTreeNodeDescendants(tree, parentId, skipAutoGeneratedRows) {\n  var _tree$parentId;\n\n  var children = (_tree$parentId = tree[parentId]) == null ? void 0 : _tree$parentId.children;\n\n  if (children == null) {\n    return [];\n  }\n\n  var validDescendants = [];\n\n  for (var i = 0; i < children.length; i += 1) {\n    var child = children[i];\n    var childNode = tree[child];\n\n    if (!skipAutoGeneratedRows || !childNode.isAutoGenerated) {\n      validDescendants.push(child);\n    }\n\n    validDescendants.push.apply(validDescendants, _toConsumableArray(getTreeNodeDescendants(tree, childNode.id, skipAutoGeneratedRows)));\n  }\n\n  return validDescendants;\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  var _pinnedRows$top, _pinnedRows$bottom;\n\n  var pinnedRows = gridPinnedRowsSelector(apiRef);\n  var topPinnedRowsHeight = (pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.reduce(function (acc, value) {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  var bottomPinnedRowsHeight = (pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.reduce(function (acc, value) {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","gridPinnedRowsSelector","checkGridRowIdIsValid","id","row","detailErrorMessage","Error","JSON","stringify","join","getRowIdFromRowModel","rowModel","getRowId","createRowsInternalCache","rows","loading","cache","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","idRowsLookup","idToIdLookup","ids","i","length","push","getRowsStateFromCache","apiRef","previousTree","rowCountProp","loadingProp","_apiRef$current$unsta","current","unstable_caches","cacheForGrouping","rowCount","groupingResponse","unstable_applyStrategyProcessor","processedGroupingResponse","unstable_applyPipeProcessors","dataTopLevelRowCount","treeDepth","Object","values","tree","filter","node","parent","isPinned","groupingResponseBeforeRowHydration","totalRowCount","Math","max","totalTopLevelRowCount","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","_tree$parentId","children","validDescendants","child","childNode","isAutoGenerated","calculatePinnedRowsHeight","_pinnedRows$top","_pinnedRows$bottom","pinnedRows","topPinnedRowsHeight","top","reduce","acc","value","unstable_getRowHeight","bottomPinnedRowsHeight","bottom"],"sources":["C:/Users/luluf/OneDrive/Documents/Proximety/api-documentation-ui/node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"rowsBeforePartialUpdates\"];\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\n\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading\n}) => {\n  const cache = {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    idRowsLookup: {},\n    idToIdLookup: {},\n    ids: []\n  };\n\n  for (let i = 0; i < rows.length; i += 1) {\n    const row = rows[i];\n    const id = getRowIdFromRowModel(row, getRowId);\n    cache.idRowsLookup[id] = row;\n    cache.idToIdLookup[id] = id;\n    cache.ids.push(id);\n  }\n\n  return cache;\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  previousTree,\n  rowCountProp,\n  loadingProp\n}) => {\n  const _apiRef$current$unsta = apiRef.current.unstable_caches.rows,\n        cacheForGrouping = _objectWithoutPropertiesLoose(_apiRef$current$unsta, _excluded);\n\n  const rowCount = rowCountProp != null ? rowCountProp : 0;\n  const groupingResponse = apiRef.current.unstable_applyStrategyProcessor('rowTreeCreation', _extends({}, cacheForGrouping, {\n    previousTree\n  }));\n  const processedGroupingResponse = apiRef.current.unstable_applyPipeProcessors('hydrateRows', groupingResponse);\n  const dataTopLevelRowCount = processedGroupingResponse.treeDepth === 1 ? processedGroupingResponse.ids.length : Object.values(processedGroupingResponse.tree).filter(node => node.parent == null && !node.isPinned).length;\n  return _extends({}, processedGroupingResponse, {\n    groupingResponseBeforeRowHydration: groupingResponse,\n    loading: loadingProp,\n    totalRowCount: Math.max(rowCount, processedGroupingResponse.ids.length),\n    totalTopLevelRowCount: Math.max(rowCount, dataTopLevelRowCount)\n  });\n};\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  var _tree$parentId;\n\n  const children = (_tree$parentId = tree[parentId]) == null ? void 0 : _tree$parentId.children;\n\n  if (children == null) {\n    return [];\n  }\n\n  const validDescendants = [];\n\n  for (let i = 0; i < children.length; i += 1) {\n    const child = children[i];\n    const childNode = tree[child];\n\n    if (!skipAutoGeneratedRows || !childNode.isAutoGenerated) {\n      validDescendants.push(child);\n    }\n\n    validDescendants.push(...getTreeNodeDescendants(tree, childNode.id, skipAutoGeneratedRows));\n  }\n\n  return validDescendants;\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  var _pinnedRows$top, _pinnedRows$bottom;\n\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = (pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  const bottomPinnedRowsHeight = (pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}