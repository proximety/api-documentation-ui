{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/luluf/OneDrive/Documents/Proximety/api-documentation-ui/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/luluf/OneDrive/Documents/Proximety/api-documentation-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/luluf/OneDrive/Documents/Proximety/api-documentation-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing.new';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing.new';\nexport var editingStateInitializer = function editingStateInitializer(state) {\n  return _extends({}, state, {\n    editRows: {}\n  });\n};\nexport var useGridEditing = function useGridEditing(apiRef, props) {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  var debounceMap = React.useRef({});\n  var isCellEditableProp = props.isCellEditable;\n  var isCellEditable = React.useCallback(function (params) {\n    if (params.rowNode.isAutoGenerated) {\n      return false;\n    }\n\n    if (!params.colDef.editable) {\n      return false;\n    }\n\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n\n    if (params.rowNode.isPinned) {\n      return false;\n    }\n\n    return true;\n  }, [isCellEditableProp]);\n\n  var maybeDebounce = function maybeDebounce(id, field, debounceMs, callback) {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n\n    if (debounceMap.current[id][field]) {\n      var _debounceMap$current$ = _slicedToArray(debounceMap.current[id][field], 1),\n          _timeout = _debounceMap$current$[0];\n\n      clearTimeout(_timeout);\n    } // To run the callback immediatelly without waiting the timeout\n\n\n    var runImmediately = function runImmediately() {\n      var _debounceMap$current$2 = _slicedToArray(debounceMap.current[id][field], 1),\n          timeout = _debounceMap$current$2[0];\n\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n\n    var timeout = setTimeout(function () {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n\n  React.useEffect(function () {\n    var debounces = debounceMap.current;\n    return function () {\n      Object.entries(debounces).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            id = _ref2[0],\n            fields = _ref2[1];\n\n        Object.keys(fields).forEach(function (field) {\n          var _debounces$id$field = _slicedToArray(debounces[id][field], 1),\n              timeout = _debounces$id$field[0];\n\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  var runPendingEditCellValueMutation = React.useCallback(function (id, field) {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(function (debouncedField) {\n        var _debounceMap$current$3 = _slicedToArray(debounceMap.current[id][debouncedField], 2),\n            runCallback = _debounceMap$current$3[1];\n\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      var _debounceMap$current$4 = _slicedToArray(debounceMap.current[id][field], 2),\n          runCallback = _debounceMap$current$4[1];\n\n      runCallback();\n    }\n  }, []);\n  var setEditCellValue = React.useCallback(function (params) {\n    var id = params.id,\n        field = params.field,\n        debounceMs = params.debounceMs;\n    return new Promise(function (resolve) {\n      maybeDebounce(id, field, debounceMs, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var setEditCellValueToCall, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.unstable_setRowEditingEditCellValue : apiRef.current.unstable_setCellEditingEditCellValue; // Check if the cell is in edit mode\n                // By the time this callback runs the user may have cancelled the editing\n\n                if (!(apiRef.current.getCellMode(id, field) === GridCellModes.Edit)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 4;\n                return setEditCellValueToCall(params);\n\n              case 4:\n                result = _context.sent;\n                resolve(result);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })));\n    });\n  }, [apiRef, props.editMode]);\n  var getRowWithUpdatedValues = React.useCallback(function (id, field) {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.unstable_getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.unstable_getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  var editingSharedApi = {\n    isCellEditable: isCellEditable,\n    setEditCellValue: setEditCellValue,\n    unstable_runPendingEditCellValueMutation: runPendingEditCellValueMutation,\n    unstable_getRowWithUpdatedValues: getRowWithUpdatedValues\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'EditingApi');\n};","map":{"version":3,"names":["_extends","React","useGridApiMethod","useGridCellEditing","GridCellModes","GridEditModes","useGridRowEditing","editingStateInitializer","state","editRows","useGridEditing","apiRef","props","debounceMap","useRef","isCellEditableProp","isCellEditable","useCallback","params","rowNode","isAutoGenerated","colDef","editable","renderEditCell","isPinned","maybeDebounce","id","field","debounceMs","callback","current","timeout","clearTimeout","runImmediately","setTimeout","useEffect","debounces","Object","entries","forEach","fields","keys","runPendingEditCellValueMutation","debouncedField","runCallback","setEditCellValue","Promise","resolve","setEditCellValueToCall","editMode","Row","unstable_setRowEditingEditCellValue","unstable_setCellEditingEditCellValue","getCellMode","Edit","result","getRowWithUpdatedValues","Cell","unstable_getRowWithUpdatedValuesFromCellEditing","unstable_getRowWithUpdatedValuesFromRowEditing","editingSharedApi","unstable_runPendingEditCellValueMutation","unstable_getRowWithUpdatedValues"],"sources":["C:/Users/luluf/OneDrive/Documents/Proximety/api-documentation-ui/node_modules/@mui/x-data-grid/hooks/features/editRows/useGridEditing.new.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing.new';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing.new';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (params.rowNode.isAutoGenerated) {\n      return false;\n    }\n\n    if (!params.colDef.editable) {\n      return false;\n    }\n\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n\n    if (params.rowNode.isPinned) {\n      return false;\n    }\n\n    return true;\n  }, [isCellEditableProp]);\n\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    } // To run the callback immediatelly without waiting the timeout\n\n\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.unstable_setRowEditingEditCellValue : apiRef.current.unstable_setCellEditingEditCellValue; // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.unstable_getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.unstable_getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    unstable_runPendingEditCellValueMutation: runPendingEditCellValueMutation,\n    unstable_getRowWithUpdatedValues: getRowWithUpdatedValues\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'EditingApi');\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}