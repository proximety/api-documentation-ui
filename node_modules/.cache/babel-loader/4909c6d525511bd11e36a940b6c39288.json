{"ast":null,"code":"import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport var useGridRegisterPipeProcessor = function useGridRegisterPipeProcessor(apiRef, group, callback) {\n  var cleanup = React.useRef();\n  var id = React.useRef(\"mui-\".concat(Math.round(Math.random() * 1e9)));\n  var registerPreProcessor = React.useCallback(function () {\n    cleanup.current = apiRef.current.unstable_registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(function () {\n    registerPreProcessor();\n  });\n  var isFirstRender = React.useRef(true);\n  React.useEffect(function () {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n\n    return function () {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","map":{"version":3,"names":["React","useFirstRender","useGridRegisterPipeProcessor","apiRef","group","callback","cleanup","useRef","id","Math","round","random","registerPreProcessor","useCallback","current","unstable_registerPipeProcessor","isFirstRender","useEffect"],"sources":["C:/Users/luluf/OneDrive/Documents/Proximety/api-documentation-ui/node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js"],"sourcesContent":["import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.unstable_registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,OAAO,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,MAAD,EAASC,KAAT,EAAgBC,QAAhB,EAA6B;EACvE,IAAMC,OAAO,GAAGN,KAAK,CAACO,MAAN,EAAhB;EACA,IAAMC,EAAE,GAAGR,KAAK,CAACO,MAAN,eAAoBE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAApB,EAAX;EACA,IAAMC,oBAAoB,GAAGZ,KAAK,CAACa,WAAN,CAAkB,YAAM;IACnDP,OAAO,CAACQ,OAAR,GAAkBX,MAAM,CAACW,OAAP,CAAeC,8BAAf,CAA8CX,KAA9C,EAAqDI,EAAE,CAACM,OAAxD,EAAiET,QAAjE,CAAlB;EACD,CAF4B,EAE1B,CAACF,MAAD,EAASE,QAAT,EAAmBD,KAAnB,CAF0B,CAA7B;EAGAH,cAAc,CAAC,YAAM;IACnBW,oBAAoB;EACrB,CAFa,CAAd;EAGA,IAAMI,aAAa,GAAGhB,KAAK,CAACO,MAAN,CAAa,IAAb,CAAtB;EACAP,KAAK,CAACiB,SAAN,CAAgB,YAAM;IACpB,IAAID,aAAa,CAACF,OAAlB,EAA2B;MACzBE,aAAa,CAACF,OAAd,GAAwB,KAAxB;IACD,CAFD,MAEO;MACLF,oBAAoB;IACrB;;IAED,OAAO,YAAM;MACX,IAAIN,OAAO,CAACQ,OAAZ,EAAqB;QACnBR,OAAO,CAACQ,OAAR;QACAR,OAAO,CAACQ,OAAR,GAAkB,IAAlB;MACD;IACF,CALD;EAMD,CAbD,EAaG,CAACF,oBAAD,CAbH;AAcD,CAxBM"},"metadata":{},"sourceType":"module"}